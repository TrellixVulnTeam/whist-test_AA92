{"ast":null,"code":"'use strict';\n\nconst Annotate = require('./annotate');\n\nconst Common = require('./common');\n\nconst Template = require('./template');\n\nconst internals = {};\nexports.Report = class {\n  constructor(code, value, local, flags, messages, state, prefs) {\n    this.code = code;\n    this.flags = flags;\n    this.messages = messages;\n    this.path = state.path;\n    this.prefs = prefs;\n    this.state = state;\n    this.value = value;\n    this.message = null;\n    this.template = null;\n    this.local = local || {};\n    this.local.label = exports.label(this.flags, this.state, this.prefs, this.messages);\n\n    if (this.value !== undefined && !this.local.hasOwnProperty('value')) {\n      this.local.value = this.value;\n    }\n\n    if (this.path.length) {\n      const key = this.path[this.path.length - 1];\n\n      if (typeof key !== 'object') {\n        this.local.key = key;\n      }\n    }\n  }\n\n  _setTemplate(template) {\n    this.template = template;\n\n    if (!this.flags.label && this.path.length === 0) {\n      const localized = this._template(this.template, 'root');\n\n      if (localized) {\n        this.local.label = localized;\n      }\n    }\n  }\n\n  toString() {\n    if (this.message) {\n      return this.message;\n    }\n\n    const code = this.code;\n\n    if (!this.prefs.errors.render) {\n      return this.code;\n    }\n\n    const template = this._template(this.template) || this._template(this.prefs.messages) || this._template(this.messages);\n\n    if (template === undefined) {\n      return `Error code \"${code}\" is not defined, your custom type is missing the correct messages definition`;\n    } // Render and cache result\n\n\n    this.message = template.render(this.value, this.state, this.prefs, this.local, {\n      errors: this.prefs.errors,\n      messages: [this.prefs.messages, this.messages]\n    });\n\n    if (!this.prefs.errors.label) {\n      this.message = this.message.replace(/^\"\" /, '').trim();\n    }\n\n    return this.message;\n  }\n\n  _template(messages, code) {\n    return exports.template(this.value, messages, code || this.code, this.state, this.prefs);\n  }\n\n};\n\nexports.path = function (path) {\n  let label = '';\n\n  for (const segment of path) {\n    if (typeof segment === 'object') {\n      // Exclude array single path segment\n      continue;\n    }\n\n    if (typeof segment === 'string') {\n      if (label) {\n        label += '.';\n      }\n\n      label += segment;\n    } else {\n      label += `[${segment}]`;\n    }\n  }\n\n  return label;\n};\n\nexports.template = function (value, messages, code, state, prefs) {\n  if (!messages) {\n    return;\n  }\n\n  if (Template.isTemplate(messages)) {\n    return code !== 'root' ? messages : null;\n  }\n\n  let lang = prefs.errors.language;\n\n  if (Common.isResolvable(lang)) {\n    lang = lang.resolve(value, state, prefs);\n  }\n\n  if (lang && messages[lang] && messages[lang][code] !== undefined) {\n    return messages[lang][code];\n  }\n\n  return messages[code];\n};\n\nexports.label = function (flags, state, prefs, messages) {\n  if (flags.label) {\n    return flags.label;\n  }\n\n  if (!prefs.errors.label) {\n    return '';\n  }\n\n  let path = state.path;\n\n  if (prefs.errors.label === 'key' && state.path.length > 1) {\n    path = state.path.slice(-1);\n  }\n\n  const normalized = exports.path(path);\n\n  if (normalized) {\n    return normalized;\n  }\n\n  return exports.template(null, prefs.messages, 'root', state, prefs) || messages && exports.template(null, messages, 'root', state, prefs) || 'value';\n};\n\nexports.process = function (errors, original, prefs) {\n  if (!errors) {\n    return null;\n  }\n\n  const {\n    override,\n    message,\n    details\n  } = exports.details(errors);\n\n  if (override) {\n    return override;\n  }\n\n  if (prefs.errors.stack) {\n    return new exports.ValidationError(message, details, original);\n  }\n\n  const limit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 0;\n  const validationError = new exports.ValidationError(message, details, original);\n  Error.stackTraceLimit = limit;\n  return validationError;\n};\n\nexports.details = function (errors, options = {}) {\n  let messages = [];\n  const details = [];\n\n  for (const item of errors) {\n    // Override\n    if (item instanceof Error) {\n      if (options.override !== false) {\n        return {\n          override: item\n        };\n      }\n\n      const message = item.toString();\n      messages.push(message);\n      details.push({\n        message,\n        type: 'override',\n        context: {\n          error: item\n        }\n      });\n      continue;\n    } // Report\n\n\n    const message = item.toString();\n    messages.push(message);\n    details.push({\n      message,\n      path: item.path.filter(v => typeof v !== 'object'),\n      type: item.code,\n      context: item.local\n    });\n  }\n\n  if (messages.length > 1) {\n    messages = [...new Set(messages)];\n  }\n\n  return {\n    message: messages.join('. '),\n    details\n  };\n};\n\nexports.ValidationError = class extends Error {\n  constructor(message, details, original) {\n    super(message);\n    this._original = original;\n    this.details = details;\n  }\n\n  static isError(err) {\n    return err instanceof exports.ValidationError;\n  }\n\n};\nexports.ValidationError.prototype.isJoi = true;\nexports.ValidationError.prototype.name = 'ValidationError';\nexports.ValidationError.prototype.annotate = Annotate.error;","map":{"version":3,"sources":["C:/scripting/jobs assignments/whist/backend/node_modules/joi/lib/errors.js"],"names":["Annotate","require","Common","Template","internals","exports","Report","constructor","code","value","local","flags","messages","state","prefs","path","message","template","label","undefined","hasOwnProperty","length","key","_setTemplate","localized","_template","toString","errors","render","replace","trim","segment","isTemplate","lang","language","isResolvable","resolve","slice","normalized","process","original","override","details","stack","ValidationError","limit","Error","stackTraceLimit","validationError","options","item","push","type","context","error","filter","v","Set","join","_original","isError","err","prototype","isJoi","name","annotate"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Annotate = require('./annotate');\nconst Common = require('./common');\nconst Template = require('./template');\n\n\nconst internals = {};\n\n\nexports.Report = class {\n\n    constructor(code, value, local, flags, messages, state, prefs) {\n\n        this.code = code;\n        this.flags = flags;\n        this.messages = messages;\n        this.path = state.path;\n        this.prefs = prefs;\n        this.state = state;\n        this.value = value;\n\n        this.message = null;\n        this.template = null;\n\n        this.local = local || {};\n        this.local.label = exports.label(this.flags, this.state, this.prefs, this.messages);\n\n        if (this.value !== undefined &&\n            !this.local.hasOwnProperty('value')) {\n\n            this.local.value = this.value;\n        }\n\n        if (this.path.length) {\n            const key = this.path[this.path.length - 1];\n            if (typeof key !== 'object') {\n                this.local.key = key;\n            }\n        }\n    }\n\n    _setTemplate(template) {\n\n        this.template = template;\n\n        if (!this.flags.label &&\n            this.path.length === 0) {\n\n            const localized = this._template(this.template, 'root');\n            if (localized) {\n                this.local.label = localized;\n            }\n        }\n    }\n\n    toString() {\n\n        if (this.message) {\n            return this.message;\n        }\n\n        const code = this.code;\n\n        if (!this.prefs.errors.render) {\n            return this.code;\n        }\n\n        const template = this._template(this.template) ||\n            this._template(this.prefs.messages) ||\n            this._template(this.messages);\n\n        if (template === undefined) {\n            return `Error code \"${code}\" is not defined, your custom type is missing the correct messages definition`;\n        }\n\n        // Render and cache result\n\n        this.message = template.render(this.value, this.state, this.prefs, this.local, { errors: this.prefs.errors, messages: [this.prefs.messages, this.messages] });\n        if (!this.prefs.errors.label) {\n            this.message = this.message.replace(/^\"\" /, '').trim();\n        }\n\n        return this.message;\n    }\n\n    _template(messages, code) {\n\n        return exports.template(this.value, messages, code || this.code, this.state, this.prefs);\n    }\n};\n\n\nexports.path = function (path) {\n\n    let label = '';\n    for (const segment of path) {\n        if (typeof segment === 'object') {          // Exclude array single path segment\n            continue;\n        }\n\n        if (typeof segment === 'string') {\n            if (label) {\n                label += '.';\n            }\n\n            label += segment;\n        }\n        else {\n            label += `[${segment}]`;\n        }\n    }\n\n    return label;\n};\n\n\nexports.template = function (value, messages, code, state, prefs) {\n\n    if (!messages) {\n        return;\n    }\n\n    if (Template.isTemplate(messages)) {\n        return code !== 'root' ? messages : null;\n    }\n\n    let lang = prefs.errors.language;\n    if (Common.isResolvable(lang)) {\n        lang = lang.resolve(value, state, prefs);\n    }\n\n    if (lang &&\n        messages[lang] &&\n        messages[lang][code] !== undefined) {\n\n        return messages[lang][code];\n    }\n\n    return messages[code];\n};\n\n\nexports.label = function (flags, state, prefs, messages) {\n\n    if (flags.label) {\n        return flags.label;\n    }\n\n    if (!prefs.errors.label) {\n        return '';\n    }\n\n    let path = state.path;\n    if (prefs.errors.label === 'key' &&\n        state.path.length > 1) {\n\n        path = state.path.slice(-1);\n    }\n\n    const normalized = exports.path(path);\n    if (normalized) {\n        return normalized;\n    }\n\n    return exports.template(null, prefs.messages, 'root', state, prefs) ||\n        messages && exports.template(null, messages, 'root', state, prefs) ||\n        'value';\n};\n\n\nexports.process = function (errors, original, prefs) {\n\n    if (!errors) {\n        return null;\n    }\n\n    const { override, message, details } = exports.details(errors);\n    if (override) {\n        return override;\n    }\n\n    if (prefs.errors.stack) {\n        return new exports.ValidationError(message, details, original);\n    }\n\n    const limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    const validationError = new exports.ValidationError(message, details, original);\n    Error.stackTraceLimit = limit;\n    return validationError;\n};\n\n\nexports.details = function (errors, options = {}) {\n\n    let messages = [];\n    const details = [];\n\n    for (const item of errors) {\n\n        // Override\n\n        if (item instanceof Error) {\n            if (options.override !== false) {\n                return { override: item };\n            }\n\n            const message = item.toString();\n            messages.push(message);\n\n            details.push({\n                message,\n                type: 'override',\n                context: { error: item }\n            });\n\n            continue;\n        }\n\n        // Report\n\n        const message = item.toString();\n        messages.push(message);\n\n        details.push({\n            message,\n            path: item.path.filter((v) => typeof v !== 'object'),\n            type: item.code,\n            context: item.local\n        });\n    }\n\n    if (messages.length > 1) {\n        messages = [...new Set(messages)];\n    }\n\n    return { message: messages.join('. '), details };\n};\n\n\nexports.ValidationError = class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n};\n\n\nexports.ValidationError.prototype.isJoi = true;\n\nexports.ValidationError.prototype.name = 'ValidationError';\n\nexports.ValidationError.prototype.annotate = Annotate.error;\n"]},"metadata":{},"sourceType":"script"}