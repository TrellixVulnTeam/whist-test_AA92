{"ast":null,"code":"var _jsxFileName = \"C:\\\\scripting\\\\jobs assignments\\\\whist\\\\frontend\\\\src\\\\common\\\\form.jsx\";\nimport React, { Component } from \"react\";\nimport Joi from \"joi-browser\"; //Form fields\n\nimport { InputType } from \"zlib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: {},\n      errors: {}\n    };\n\n    this.validate = () => {\n      const options = {\n        abortEarly: false\n      }; //disable the 'lazy' property of joi when it stops after one line is wrong. we assign it to const so the code will be more readable.\n\n      const {\n        error\n      } = Joi.validate(this.state.products, this.schema, options);\n      if (!error) return null;\n      const errors = {};\n\n      for (let item of error.details) errors[item.path[0]] = item.message;\n\n      return errors;\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      return error ? error.details[0].message : null;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.doSubmit();\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      const products = { ...this.state.products\n      };\n      products[input.name] = input.value;\n      this.setState({\n        products,\n        errors\n      });\n    };\n  }\n\n  renderButton(label) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: this.validate(),\n      className: \"btn btn-primary mt-3 me-2\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const {\n      products,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Input, {\n      type: type,\n      name: name,\n      value: products[name],\n      label: label,\n      onChange: this.handleChange,\n      error: errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderTextArea(name, label, type = 'text') {\n    const {\n      products,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(TextArea, {\n      type: type,\n      name: name,\n      value: products[name],\n      label: label,\n      onChange: this.handleChange,\n      error: errors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/scripting/jobs assignments/whist/frontend/src/common/form.jsx"],"names":["React","Component","Joi","InputType","Form","state","products","errors","validate","options","abortEarly","error","schema","item","details","path","message","validateProperty","name","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","currentTarget","input","errorMessage","renderButton","label","renderInput","type","renderTextArea"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\n\r\n//Form fields\r\nimport { InputType } from \"zlib\";\r\n\r\n\r\nclass Form extends Component {\r\n    //the state will not fill with products. the products will go to register page state.\r\n    state = {\r\n        products: {},\r\n        errors: {}\r\n    };\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false };//disable the 'lazy' property of joi when it stops after one line is wrong. we assign it to const so the code will be more readable.\r\n        const { error } = Joi.validate(this.state.products, this.schema, options);\r\n        if (!error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of error.details) errors[item.path[0]] = item.message;\r\n        return errors;\r\n    };\r\n\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if (errors) return;\r\n\r\n        this.doSubmit();\r\n    };\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = { ...this.state.errors };\r\n        const errorMessage = this.validateProperty(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const products = { ...this.state.products };\r\n        products[input.name] = input.value;\r\n\r\n        this.setState({ products, errors });\r\n    };\r\n\r\n    renderButton(label) {\r\n        return (\r\n            <button disabled={this.validate()} className=\"btn btn-primary mt-3 me-2\">\r\n                {label}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    renderInput(name, label, type = \"text\") {\r\n        const { products, errors } = this.state;\r\n\r\n        return (\r\n            <Input\r\n                type={type}\r\n                name={name}\r\n                value={products[name]}\r\n                label={label}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n\r\n    renderTextArea(name, label, type = 'text') {\r\n        const { products, errors } = this.state;\r\n\r\n        return (\r\n            <TextArea\r\n                type={type}\r\n                name={name}\r\n                value={products[name]}\r\n                label={label}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}