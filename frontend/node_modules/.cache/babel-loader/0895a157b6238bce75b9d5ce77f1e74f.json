{"ast":null,"code":"var _jsxFileName = \"C:\\\\scripting\\\\jobs assignments\\\\whist\\\\frontend\\\\src\\\\components\\\\cart.jsx\";\nimport React, { Component } from 'react';\nimport productService from '../services/productService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      total: ''\n    };\n  }\n\n  async componentDidMount() {\n    let sum = 0;\n    let total = [];\n\n    for (let x = 0; x < this.state.products.length; x++) {\n      total.push(this.state.products[x].price);\n      sum += total[x];\n    }\n\n    const {\n      data\n    } = await productService.getCartProducts();\n    if (data.length > 0) this.setState({\n      products: data\n    });\n    localStorage.setItem('items', this.state.products.length);\n    localStorage.setItem('total', this.state.total);\n  }\n\n  render() {\n    const {\n      products\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col p-2 \",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [product.title, \" | \", product.price, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"sources":["C:/scripting/jobs assignments/whist/frontend/src/components/cart.jsx"],"names":["React","Component","productService","Cart","state","products","total","componentDidMount","sum","x","length","push","price","data","getCartProducts","setState","localStorage","setItem","render","map","product","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBG,KADyB,GACjB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,KAAK,EAAE;AAFH,KADiB;AAAA;;AAMF,QAAjBC,iBAAiB,GAAG;AACtB,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIF,KAAK,GAAG,EAAZ;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACjDH,MAAAA,KAAK,CAACK,IAAN,CAAW,KAAKP,KAAL,CAAWC,QAAX,CAAoBI,CAApB,EAAuBG,KAAlC;AACAJ,MAAAA,GAAG,IAAIF,KAAK,CAACG,CAAD,CAAZ;AACH;;AACD,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMX,cAAc,CAACY,eAAf,EAAvB;AACA,QAAID,IAAI,CAACH,MAAL,GAAc,CAAlB,EAAqB,KAAKK,QAAL,CAAc;AAAEV,MAAAA,QAAQ,EAAEQ;AAAZ,KAAd;AAErBG,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,KAAKb,KAAL,CAAWC,QAAX,CAAoBK,MAAlD;AACAM,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,KAAKb,KAAL,CAAWE,KAAzC;AACH;;AAIDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKC,QAAQ,CAACc,GAAT,CAAaC,OAAO,iBACjB;AAAA,gCACI;AAAA,qBAAIA,OAAO,CAACC,KAAZ,SAAsBD,OAAO,CAACR,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AApCwB;;AAuC7B,eAAeT,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport productService from '../services/productService';\r\n\r\nclass Cart extends Component {\r\n    state = {\r\n        products: [],\r\n        total: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let sum = 0\r\n        let total = []\r\n\r\n        for (let x = 0; x < this.state.products.length; x++) {\r\n            total.push(this.state.products[x].price);\r\n            sum += total[x]\r\n        }\r\n        const { data } = await productService.getCartProducts();\r\n        if (data.length > 0) this.setState({ products: data });\r\n        \r\n        localStorage.setItem('items', this.state.products.length)\r\n        localStorage.setItem('total', this.state.total)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { products } = this.state;\r\n\r\n        return (\r\n            <div className=\"col p-2 \">\r\n                {products.map(product => (\r\n                    <div>\r\n                        <p>{product.title} | {product.price}$</p>\r\n                        <hr />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}