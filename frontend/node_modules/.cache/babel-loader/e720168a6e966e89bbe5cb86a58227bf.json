{"ast":null,"code":"var _jsxFileName = \"C:\\\\scripting\\\\jobs assignments\\\\whist\\\\frontend\\\\src\\\\components\\\\cart-demo.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { CartProvider, useCart } from \"react-use-cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Page() {\n  _s();\n\n  const {\n    addItem\n  } = useCart();\n  const products = [{\n    id: 1,\n    name: \"Malm\",\n    price: 9900,\n    quantity: 1\n  }, {\n    id: 2,\n    name: \"Nordli\",\n    price: 16500,\n    quantity: 5\n  }, {\n    id: 3,\n    name: \"Kullen\",\n    price: 4500,\n    quantity: 1\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: products.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addItem(p),\n        children: \"Add to cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, p.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Page, \"3LNLw4tPbVBVCiFLdiRUbDVWYfc=\", false, function () {\n  return [useCart];\n});\n\n_c = Page;\n\nfunction Cart() {\n  _s2();\n\n  const {\n    isEmpty,\n    totalUniqueItems,\n    items,\n    updateItemQuantity,\n    removeItem\n  } = useCart();\n  if (isEmpty) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Your cart is empty\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Cart (\", totalUniqueItems, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.quantity, \" x \", item.name, \" \\u2014\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateItemQuantity(item.id, item.quantity - 1),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateItemQuantity(item.id, item.quantity + 1),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeItem(item.id),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Cart, \"fwnxG2+YfJE3MROigKFI4EnzRmA=\", false, function () {\n  return [useCart];\n});\n\n_c2 = Cart;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(CartProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"Cart\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/scripting/jobs assignments/whist/frontend/src/components/cart-demo.jsx"],"names":["CartProvider","useCart","Page","addItem","products","id","name","price","quantity","map","p","Cart","isEmpty","totalUniqueItems","items","updateItemQuantity","removeItem","item","App"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,OAAvB,QAAsC,gBAAtC;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM;AAAEC,IAAAA;AAAF,MAAcF,OAAO,EAA3B;AAEA,QAAMG,QAAQ,GAAG,CACb;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,KAAK,EAAE,IAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GADa,EAOb;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE,KAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAPa,EAab;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,KAAK,EAAE,IAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAba,CAAjB;AAqBA,sBACI;AAAA,cACKJ,QAAQ,CAACK,GAAT,CAAcC,CAAD,iBACV;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,MAAMP,OAAO,CAACO,CAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUA,CAAC,CAACL,EAAZ;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAjCQH,I;UACeD,O;;;KADfC,I;;AAmCT,SAASS,IAAT,GAAgB;AAAA;;AACZ,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA,gBAFE;AAGFC,IAAAA,KAHE;AAIFC,IAAAA,kBAJE;AAKFC,IAAAA;AALE,MAMFf,OAAO,EANX;AAQA,MAAIW,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,sBACI;AAAA,4BACI;AAAA,2BAAWC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,gBACKC,KAAK,CAACL,GAAN,CAAWQ,IAAD,iBACP;AAAA,mBACKA,IAAI,CAACT,QADV,SACuBS,IAAI,CAACX,IAD5B,0BAEI;AACI,UAAA,OAAO,EAAE,MAAMS,kBAAkB,CAACE,IAAI,CAACZ,EAAN,EAAUY,IAAI,CAACT,QAAL,GAAgB,CAA1B,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI;AACI,UAAA,OAAO,EAAE,MAAMO,kBAAkB,CAACE,IAAI,CAACZ,EAAN,EAAUY,IAAI,CAACT,QAAL,GAAgB,CAA1B,CADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAYI;AAAQ,UAAA,OAAO,EAAE,MAAMQ,UAAU,CAACC,IAAI,CAACZ,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA,SAASY,IAAI,CAACZ,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAwBH;;IAnCQM,I;UAODV,O;;;MAPCU,I;;AAqCT,SAASO,GAAT,GAAe;AACX,sBACI,QAAC,YAAD;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;MAPQA,G","sourcesContent":["import { CartProvider, useCart } from \"react-use-cart\";\r\n\r\nfunction Page() {\r\n    const { addItem } = useCart();\r\n\r\n    const products = [\r\n        {\r\n            id: 1,\r\n            name: \"Malm\",\r\n            price: 9900,\r\n            quantity: 1\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Nordli\",\r\n            price: 16500,\r\n            quantity: 5\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Kullen\",\r\n            price: 4500,\r\n            quantity: 1\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            {products.map((p) => (\r\n                <div key={p.id}>\r\n                    <button onClick={() => addItem(p)}>Add to cart</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Cart() {\r\n    const {\r\n        isEmpty,\r\n        totalUniqueItems,\r\n        items,\r\n        updateItemQuantity,\r\n        removeItem,\r\n    } = useCart();\r\n\r\n    if (isEmpty) return <p>Your cart is empty</p>;\r\n\r\n    return (\r\n        <>\r\n            <h1>Cart ({totalUniqueItems})</h1>\r\n\r\n            <ul>\r\n                {items.map((item) => (\r\n                    <li key={item.id}>\r\n                        {item.quantity} x {item.name} &mdash;\r\n                        <button\r\n                            onClick={() => updateItemQuantity(item.id, item.quantity - 1)}\r\n                        >\r\n                            -\r\n                        </button>\r\n                        <button\r\n                            onClick={() => updateItemQuantity(item.id, item.quantity + 1)}\r\n                        >\r\n                            +\r\n                        </button>\r\n                        <button onClick={() => removeItem(item.id)}>&times;</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <CartProvider>\r\n            <Page />\r\n            <Cart />\r\n        </CartProvider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}